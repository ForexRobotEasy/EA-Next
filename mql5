mql5
//+------------------------------------------------------------------+
//|                                        EA Next by Forex Robot Easy Team |
//|                                      Developer's site: forexroboteasy.com |
//+------------------------------------------------------------------+
//|                                Terms of Reference for Writing Code for Product EA Next |
//| Objective: The objective of this task is to write code for the EA Next Forex Trading Software based on its description and requirements. |
//| This code includes the necessary trading functions and code requirements. The technical specification focuses on the implementation of the algorithm and required features. |
//+------------------------------------------------------------------+

//--- Inputs
input double LotSize = 0.01; // Default lot size
input bool UseFixedLot = false; // Option to use a fixed lot for trading
input double StopLoss = 50.0; // Stop loss value in points

//--- Global variables
double averagePrice; // Average price during trading
double deviationThreshold = 10.0; // Deviation threshold for trade closing algorithm

//+------------------------------------------------------------------+
//| Function to calculate lot size based on account equity |
//+------------------------------------------------------------------+
double CalculateLotSize()
{
    double equity = AccountEquity();
    
    if(UseFixedLot)
    {
        return LotSize;
    }
    else
    {
        double freeMargin = AccountFreeMargin();
        double riskPercentage = 0.02; // Risk percentage as per the built-in algorithm
        
        return NormalizeDouble((equity * riskPercentage) / StopLoss, 2);
    }
}

//+------------------------------------------------------------------+
//| Function to close trades based on trade closing algorithm |
//+------------------------------------------------------------------+
void CloseTrades()
{
    int totalTrades = OrdersTotal();
    
    for(int i = totalTrades - 1; i >= 0; i--)
    {
        if(OrderSelect(i, SELECT_BY_POS, MODE_TRADES))
        {
            double tradeProfit = OrderProfit();
            double tradeOpenPrice = OrderOpenPrice();
            
            if(MathAbs(tradeOpenPrice - averagePrice) > deviationThreshold)
            {
                if(tradeProfit > 0)
                {
                    OrderClose(OrderTicket(), OrderLots(), Bid, 3, clrGreen);
                }
                else if(tradeProfit < 0)
                {
                    OrderClose(OrderTicket(), OrderLots(), Ask, 3, clrRed);
                }
            }
        }
    }
}

//+------------------------------------------------------------------+
//| Function to manage risk by setting stop loss |
//+------------------------------------------------------------------+
void ManageRisk()
{
    int totalTrades = OrdersTotal();
    
    for(int i = totalTrades - 1; i >= 0; i--)
    {
        if(OrderSelect(i, SELECT_BY_POS, MODE_TRADES))
        {
            if(OrderType() <= OP_SELL)
            {
                if(OrderStopLoss() == 0.0)
                {
                    OrderModify(OrderTicket(), OrderOpenPrice(), NormalizeDouble(OrderOpenPrice() - StopLoss * Point, Digits), OrderTakeProfit(), 0, clrNONE);
                }
            }
        }
    }
}

//+------------------------------------------------------------------+
//| Start function |
//+------------------------------------------------------------------+
void OnTick()
{
    if(Symbol() != 'USDCHF')
    {
        Print('EA Next works best with USDCHF currency pair. Please optimize for other currency pairs.');
    }
    
    if(Period() != PERIOD_M5)
    {
        Print('EA Next operates best on M5 timeframe. Please adapt for other timeframes.');
    }
    
    // Calculate lot size
    double lotSize = CalculateLotSize();
    
    // Open new trades
    if(Bars > 1)
    {
        averagePrice = (iClose(Symbol(), PERIOD_M5, 1) + iOpen(Symbol(), PERIOD_M5, 1)) / 2.0;
        
        if(UseFixedLot)
        {
            OrderSend(Symbol(), OP_BUY, lotSize, Ask, 3, Ask - StopLoss * Point, Ask + StopLoss * Point, 'EA Next', MagicNumber, 0, clrNONE);
            OrderSend(Symbol(), OP_SELL, lotSize, Bid, 3, Bid + StopLoss * Point, Bid - StopLoss * Point, 'EA Next', MagicNumber, 0, clrNONE);
        }
        else
        {
            OrderSend(Symbol(), OP_BUY, lotSize, Ask, 3, Ask - StopLoss * Point, Ask + StopLoss * Point, 'EA Next', MagicNumber, 0, clrNONE);
            OrderSend(Symbol(), OP_SELL, lotSize, Bid, 3, Bid + StopLoss * Point, Bid - StopLoss * Point, 'EA Next', MagicNumber, 0, clrNONE);
        }
    }
    
    // Close trades based on trade closing algorithm
    CloseTrades();
    
    // Manage risk by setting stop loss
    ManageRisk();
}
